services:
  django:
    build:
      context: .
      dockerfile: ./dev/django.Dockerfile
    command: [
      "./manage.py",
      "runserver_plus", "0.0.0.0:8000"
    ]
    # Log printing is enhanced by a TTY
    tty: true
    environment:
      UV_ENV_FILE: ./dev/.env.docker-compose
    working_dir: /opt/django-project
    volumes:
      - .:/opt/django-project
      - uv_cache:/var/cache/uv
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy

  celery:
    build:
      context: .
      dockerfile: ./dev/django.Dockerfile
    command: [
      "uv", "run",
      "celery",
      "--app", "bats_ai.celery",
      "worker",
      "--loglevel", "INFO",
      "--without-heartbeat"
    ]
    # Docker Compose does not set the TTY width, which causes Celery errors
    tty: false
    environment:
      UV_ENV_FILE: ./dev/.env.docker-compose
    working_dir: /opt/django-project
    volumes:
      - .:/opt/django-project
      - uv_cache:/var/cache/uv
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy

  client:
    image: node:18
    working_dir: /app
    command: >
      sh -c "
        npm install &&
        npm run dev
      "
    ports:
      - 3000:3000
    volumes:
      - ./client:/app
      - /app/node_modules
    env_file:
      - ./dev/.env.docker-compose

volumes:
  uv_cache:
