services:
  # Compose to bring up service from ECR resources and env files

  django:
    image: ….dkr.ecr.us-west-2.amazonaws.com/nabat/batai-django:latest
    command: "uv run gunicorn bats_ai.wsgi:application --bind 0.0.0.0:8000"
    restart: unless-stopped
    tty: true
    env_file: ./.env.usgs
    networks:
      - django-nginx
    volumes:
      - django-static:/opt/django-project/staticfiles
    ports:
      - 8000:8000
    logging:
      driver: awslogs
      options:
        awslogs-region: us-west-2
        awslogs-group: nabat/prod/batai
        tag: "{{.Name}}/{{.ID}}"
    depends_on:
      - rabbitmq
      - minio
    extra_hosts:
      - host.docker.internal:host-gateway
  celery:
    image: ….dkr.ecr.us-west-2.amazonaws.com/nabat/batai-django:latest
    command:
      [
        "uv",
        "run",
        "celery",
        "--app",
        "bats_ai.celery",
        "worker",
        "--loglevel",
        "INFO",
        "--without-heartbeat",
      ]
    restart: unless-stopped
    # Docker Compose does not set the TTY width, which causes Celery errors
    tty: false
    env_file: ./.env.usgs
    networks:
      - django-nginx
    logging:
      driver: awslogs
      options:
        awslogs-region: us-west-2
        awslogs-group: nabat/prod/batai
        tag: "{{.Name}}/{{.ID}}"
    depends_on:
      - rabbitmq
      - minio
  client:
    image: ….dkr.ecr.us-west-2.amazonaws.com/nabat/batai-client:latest
    restart: unless-stopped
    env_file: ./.env.usgs
    networks:
      - django-nginx
    depends_on:
      - django
    logging:
      driver: awslogs
      options:
        awslogs-region: us-west-2
        awslogs-group: nabat/prod/batai
        tag: "{{.Name}}/{{.ID}}"
    ports:
      - 8080:80
  rabbitmq:
    env_file: ./.env.usgs
    image: rabbitmq:management
    restart: unless-stopped
    networks:
      - django-nginx
    ports:
      - ${DOCKER_RABBITMQ_PORT-5672}:5672
      - ${DOCKER_RABBITMQ_CONSOLE_PORT-15672}:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq/mnesia
volumes:
  rabbitmq:
  django-static:
networks:
  django-nginx:
    driver: bridge
