services:
  postgres:
    image: postgis/postgis:latest
    shm_size: 128mb
    environment:
      POSTGRES_DB: django
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "--username", "postgres"]
      start_period: 30s
      start_interval: 2s
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management-alpine
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      start_period: 30s
      start_interval: 2s
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  minio:
    image: minio/minio:latest
    # When run with a TTY, minio prints credentials on startup
    tty: true
    command: ["server", "/data", "--console-address", ":9001"]
    environment:
      MINIO_ROOT_USER: minioAccessKey
      MINIO_ROOT_PASSWORD: minioSecretKey
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      # "mc ready" doesn't terminate on failure, so time it out
      timeout: 1s
      start_period: 30s
      start_interval: 2s
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio:/data

  mlflow:
    build:
      context: .
      dockerfile: ./dev/mlflow.Dockerfile
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=${DJANGO_MINIO_STORAGE_ACCESS_KEY:-minioAccessKey}
      - AWS_SECRET_ACCESS_KEY=${DJANGO_DATABASE_PASSWORD:-minioSecretKey}
    command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri postgresql://postgres:postgres@postgres:5432/mlflow --artifacts-destination s3://mlflow --default-artifact-root s3://mlflow

#   mlflow:
#     image: ghcr.io/mlflow/mlflow:latest
#     ports:
#       - "5000:5000"
#     environment:
#       - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
#       - AWS_ACCESS_KEY_ID=${DJANGO_MINIO_STORAGE_ACCESS_KEY:-minioAccessKey}
#       - AWS_SECRET_ACCESS_KEY=${DJANGO_DATABASE_PASSWORD:-minioSecretKey}
#     command: bash -c "python3 -m pip install psycopg2-binary boto3 && mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri postgresql://postgres:postgres@postgres:5432/mlflow --artifacts-destination s3://mlflow --default-artifact-root s3://mlflow"

volumes:
  postgres:
  minio:
  rabbitmq:
