# Generated by Django 4.1.13 on 2025-06-23 16:35

from django.db import migrations, models
import django.db.models.deletion

import bats_ai.core.models


def migrate_image_files(apps, schema_editor):
    Spectrogram = apps.get_model('core', 'Spectrogram')
    CompressedSpectrogram = apps.get_model('core', 'CompressedSpectrogram')
    NABatSpectrogram = apps.get_model('core', 'NABatSpectrogram')
    NABatCompressedSpectrogram = apps.get_model('core', 'NABatCompressedSpectrogram')
    SpectrogramImage = apps.get_model('core', 'SpectrogramImage')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    model_mappings = [
        (Spectrogram, 'spectrogram', 'spectrogram'),
        (CompressedSpectrogram, 'compressed', 'spectrogram'),
        (NABatSpectrogram, 'spectrogram', 'nabat_spectrogram'),
        (NABatCompressedSpectrogram, 'compressed', 'nabat_compressedspectrogram'),
    ]

    for model, image_type, _verbose in model_mappings:
        content_type = ContentType.objects.get_for_model(model)
        for instance in model.objects.all():
            # If the image_file existed before deletion, it should still be present in DB temporarily
            image_path = getattr(instance, 'image_file', None)
            if image_path:
                SpectrogramImage.objects.create(
                    content_type=content_type,
                    object_id=instance.pk,
                    type=image_type,
                    index=0,
                    image_file=image_path,
                )


def reverse_migrate_image_files(apps, schema_editor):
    Spectrogram = apps.get_model('core', 'Spectrogram')
    CompressedSpectrogram = apps.get_model('core', 'CompressedSpectrogram')
    NABatSpectrogram = apps.get_model('core', 'NABatSpectrogram')
    NABatCompressedSpectrogram = apps.get_model('core', 'NABatCompressedSpectrogram')
    SpectrogramImage = apps.get_model('core', 'SpectrogramImage')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    model_mappings = [
        (Spectrogram, 'spectrogram'),
        (CompressedSpectrogram, 'compressed'),
        (NABatSpectrogram, 'spectrogram'),
        (NABatCompressedSpectrogram, 'compressed'),
    ]

    for model, image_type in model_mappings:
        content_type = ContentType.objects.get_for_model(model)
        for instance in model.objects.all():
            try:
                image = SpectrogramImage.objects.get(
                    content_type=content_type, object_id=instance.pk, type=image_type, index=0
                )
                setattr(instance, 'image_file', image.image_file)  # noqa B010
                instance.save()
            except SpectrogramImage.DoesNotExist:
                continue  # No image found, skip


class Migration(migrations.Migration):
    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0018_exportedannotationfile'),
    ]

    operations = [
        migrations.CreateModel(
            name='SpectrogramImage',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('object_id', models.PositiveIntegerField()),
                (
                    'type',
                    models.CharField(
                        choices=[('spectrogram', 'Spectrogram'), ('compressed', 'Compressed')],
                        default='spectrogram',
                        max_length=20,
                    ),
                ),
                ('index', models.PositiveIntegerField()),
                (
                    'image_file',
                    models.FileField(
                        upload_to=bats_ai.core.models.spectrogram_image.spectrogram_image_upload_to
                    ),
                ),
                (
                    'content_type',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'
                    ),
                ),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.RunPython(migrate_image_files, reverse_code=reverse_migrate_image_files),
        migrations.RemoveField(
            model_name='compressedspectrogram',
            name='image_file',
        ),
        migrations.RemoveField(
            model_name='nabatcompressedspectrogram',
            name='image_file',
        ),
        migrations.RemoveField(
            model_name='nabatspectrogram',
            name='colormap',
        ),
        migrations.RemoveField(
            model_name='nabatspectrogram',
            name='image_file',
        ),
        migrations.RemoveField(
            model_name='spectrogram',
            name='colormap',
        ),
        migrations.RemoveField(
            model_name='spectrogram',
            name='image_file',
        ),
    ]